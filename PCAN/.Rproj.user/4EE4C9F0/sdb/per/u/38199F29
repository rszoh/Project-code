{
    "contents" : "\n\ndim(arms(runif(nrow(A),-20,20),likhd,function(tet,...) (min(tet) >-20)*(max(tet)<20),n, Z=Z[,1],A=A,sig=sigte,X=X[1,],mu=mute))\n\n\ny <- arms(c(0,2), function(x) -crossprod(x)/2,\n          function(x) (min(x)>-5)*(max(x)<5), 500)\nplot(y, main=\"Bivariate standard normal\", asp=1)\n\n\np=q\nx<-seq(1:p)\ny<-.5*p*(p+1) - (p*x -.5*x*(x-1) +p)\nplot(x,y,type=\"l\")\nabline(h=0,lwd=3)\n## Here is the actual Gibbs Sampler\n## This is Darren Wilkinsons R code (with the corrected variance)\nRgibbs <- function(N,thin) {\n  mat <- matrix(0,ncol=2,nrow=N)\n  x <- 0\n  y <- 0\n  for (i in 1:N) {\n    for (j in 1:thin) {\n      x <- rgamma(1,3,y*y+4)\n      y <- rnorm(1,1/(x+1),1/sqrt(2*(x+1)))\n    }\n    mat[i,] <- c(x,y)\n  }\n  mat\n}\n\n## We can also let the R compiler on this R function\nlibrary(compiler)\nRCgibbs <- cmpfun(Rgibbs)",
    "created" : 1390147618518.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "3651209167",
    "id" : "38199F29",
    "lastKnownWriteTime" : 1390106287,
    "path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}